//store/rootReducer.ts
import { combineReducers } from '@reduxjs/toolkit'
import { persistReducer } from 'redux-persist'
import storage from 'redux-persist/lib/storage'

import { authReducer } from './authSlice/slice.js';

// persist config —Ç–æ–ª—å–∫–æ –¥–ª—è auth
const authPersistConfig = {
  key: 'auth',
  storage,
  whitelist: ['accessToken', 'isLoggedIn'],
}

export const rootReducer = combineReducers({
  auth: persistReducer(authPersistConfig, authReducer),
  // üîπ —Å—é–¥–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –¥—Ä—É–≥–∏–µ —Ä–µ–¥—å—é—Å–µ—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä:
  // products: productsReducer,
  // orders: ordersReducer,
})

// –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≥–ª–æ–±–∞–ª—å–Ω–æ —á–∏—Å—Ç–∏—Ç—å —Å—Ç–µ–π—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ logOutUser.fulfilled), –º–æ–∂–Ω–æ –≤ rootReducer –∑–∞–≤–µ—Ä–Ω—É—Ç—å –µ–≥–æ –≤ —Ñ—É–Ω–∫—Ü–∏—é:

// const appReducer = combineReducers({
//   auth: persistReducer(authPersistConfig, authReducer),
//   // –¥—Ä—É–≥–∏–µ —Ä–µ–¥—å—é—Å–µ—Ä—ã
// });

// export const rootReducer = (state: any, action: any) => {
//   if (action.type === "auth/logOutUser/fulfilled") {
//     state = undefined; // —Å–±—Ä–æ—Å –≤—Å–µ—Ö —Ä–µ–¥—å—é—Å–µ—Ä–æ–≤
//   }
//   return appReducer(state, action);
// };
