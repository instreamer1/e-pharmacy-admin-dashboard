// import { useState } from 'react'
// import reactLogo from './assets/react.svg'
// import viteLogo from '/vite.svg'
import { Toaster } from 'react-hot-toast'
import './App.css'

import AppRouter from './routes/AppRouter'
import { useEffect } from 'react'
import { fetchCurrentUser, refresh } from './store/authSlice/operations'
import { useAppDispatch, useAppSelector } from './store/hooks'
import { useAuth } from './hooks/useAuth'
import { selectIsRefreshing } from './store/authSlice/selectors'

const App = () => {
  const dispatch = useAppDispatch()
  const isRefreshing = useAppSelector(selectIsRefreshing);
  const { isAuthenticated } = useAuth()

  useEffect(() => {
    // üü¢ –®–∞–≥ 1: –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω
    dispatch(refresh())
      .unwrap()
      .then(() => {
        // üü¢ –®–∞–≥ 2: –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        dispatch(fetchCurrentUser());
      })
      .catch(() => {
        // –ï—Å–ª–∏ refresh –Ω–µ —É–¥–∞–ª—Å—è ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –ø—Ä–æ—Å—Ç–æ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
      });
  }, [dispatch]);

  if (isRefreshing) {
    return <div>Loading...</div>; // –ò–ª–∏ —Å–ø–∏–Ω–Ω–µ—Ä, –ø–æ–∫–∞ –∏–¥–µ—Ç refresh
  }

  return (
    <>
      <AppRouter />
      <Toaster
        position="top-center"
        toastOptions={{
          duration: 3000,
          style: {
            marginTop: '20px',
            background: '#333',
            color: '#fff',
            borderRadius: '8px',
            padding: '10px 16px',
            fontSize: '14px',
          },
          success: {
            style: {
              background: '#2e7d32',
            },
          },
          error: {
            style: {
              background: '#c62828',
            },
          },
        }}
      />
    </>
  )
}

export default App
